package com.example.mediabs;

import java.util.ArrayList;

import logic.Antibiotic;
import logic.Checklist;
import android.os.Bundle;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.CheckedTextView;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.AdapterView.OnItemClickListener;

public class InterventionPossibilitiesActivity extends Activity {
	
	private Update updateData;
	ItemsAdapter adapter;
	private String medicamentButtonNo;
	private String patient;
	String patDes;
	Checklist checklist;
	CheckedTextView ctv;
	ArrayList<String> IL = new ArrayList<String>();
	Antibiotic ab; 
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_intervention_possibilities);		
		
		Intent lastScreen = getIntent();
		final String antibiotic = lastScreen.getStringExtra("patient");		 
	
		updateData = (Update) this.getApplication(); // get interface data from database

		// get data from last activity
		Bundle lastscreen = getIntent().getExtras();

		if (lastscreen != null) {
			medicamentButtonNo = lastscreen.getString("MedicamentButtonNo");
			patient 		   = lastscreen.getString("patient");
			Log.v("MedicamentButtonNo", medicamentButtonNo);
			Log.v("patient", patient);
		}
		for(Checklist checkl : updateData.getChecklistList()){
			
			if(checkl.getOwner().equals(patient)){
				
				checklist = checkl;
				if(checklist.getAntibioticList().size() > Integer.parseInt(medicamentButtonNo) ){
					ab = checklist.getAntibioticList().get(Integer.parseInt(medicamentButtonNo));
					IL = ab.getInterventionPossibilities();
					System.out.println(ab);
				}
			}
		}
		System.out.println(ab);
		final ArrayList<String> InvList = updateData.getAllInterventionTypeTitles();
		
		/*final ArrayList<String> InvList = new ArrayList<String>();	
		InvList.add("Fokussuche empfohlen");
		InvList.add("Eskalation");
		InvList.add("Deeskalation");
		InvList.add("Regimenwechsel");
		InvList.add("Zugangswechsel");
		InvList.add("Mibi empfohlen");
		InvList.add("Oralisierung");
		InvList.add("Dosisoptimierung");
		InvList.add("Absetzen");		
		
		*/
		String[] elemArray = InvList.toArray(new String[InvList.size()]);
		
		Log.v("TEST", "nach update1");
		ListView lvi = (ListView) findViewById(R.id.list);
		adapter = new ItemsAdapter(getApplicationContext(), elemArray);

		lvi.setAdapter(adapter);
		Log.v("TEST", "nach update2");
				
		Log.v("TEST", "nach update3");
		lvi.setOnItemClickListener(new OnItemClickListener() {
				
			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
					long arg3) {
				
				ctv = (CheckedTextView) arg1;
				int index = (int) adapter.getItemId(arg2);
				if (toggle(ctv)){
					IL.add(InvList.get(index));
				} else {
					for(String elem : IL){
						ArrayList<String> newdL = new ArrayList<String>();
						if (elem != InvList.get(index)){
							newdL.add(elem);
						}
						IL = newdL;
					}				
				}
				ab.setInterventionPossibilities(IL);
				checklist.getAntibioticList().set(Integer.parseInt(medicamentButtonNo), ab);				
				System.out.println(ab);
			}

		});
		Log.v("TEST", "nach update4");
		/*
		Button okButton = (Button) findViewById(R.id.okButtonint);
		okButton.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				Intent toChecklistScreen = new Intent(getApplicationContext(),
						ChecklistActivity.class);	
				//toChecklistScreen.putExtra("patient", antibiotic);
				startActivity(toChecklistScreen);
				
			}
		});
		*/
		setCheckBoxes();
	}
	
	public boolean toggle(CheckedTextView v) {
		if (v.isChecked()) {
			v.setChecked(false);
			return false;
		} else {
			v.setChecked(true);
			return true;
		}
	}

	private class ItemsAdapter extends BaseAdapter {
		String[] items;

		public ItemsAdapter(Context context, String[] item) {
			this.items = item;
		}

		// @Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View v = convertView;
			if (v == null) {
				LayoutInflater vi = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
				v = vi.inflate(R.layout.activity_intervention_items, null);
			}
			CheckedTextView post = (CheckedTextView) v
					.findViewById(R.id.checkList);
			post.setText(items[position]);
			
			for (String elem : ab.getInterventionPossibilities()){
				if(elem.equals(getItem(position))){
					post.setChecked(true);
				}
			}
			
			return v;
		}

		public int getCount() {
			return items.length;
		}

		public Object getItem(int position) {
			return items[position];
		}

		public long getItemId(int position) {
			return position;
		}
	}
	

	public void setCheckBoxes(){
	
	}
}

