package com.example.mediabs;

import java.io.IOException;
import java.util.ArrayList;

import org.apache.http.HttpException;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.conn.ConnectTimeoutException;

import logic.Checklist;
import logic.StatisticData;
import logic.User;
import logic.Ward;
import logic.TimerData;

import restclient.RestUtils;

import com.example.mediabs.R;

import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class SynchronizationActivity extends Activity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.activity_synchronization);
		//Init Update Class
		final Update u = (Update) this.getApplication();

		Button yesButton = (Button) findViewById(R.id.yesButton);
		Button noButton = (Button) findViewById(R.id.noButton);

		TextView introTextView = (TextView) findViewById(R.id.introTextView);
		introTextView.setText("Bei erfolgreicher Synchronisation werden alle mit Häcken markierten " +
				"Patienten übertragen und aus der Liste entfernt. Dies gilt auch für die Timer-Zeiten.");
		final TextView logTextView = (TextView) findViewById(R.id.logTextView);
		
		// ButtonListener
		yesButton.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				Intent toHomeScreen = new Intent(getApplicationContext(),
						HomeActivity.class);
				
				//INIT REST
				RestUtils ru = new RestUtils();
				String credentials = u.getCurrentUserName() + ":" + u.getCurrentPassword();
				
				
				//GET WARD List
				ArrayList<Ward> wardList;
				try {
					wardList = ru.getWardList(credentials);
					u.setWardList(wardList);
					u.storeWards(getApplicationContext());
				} catch (ConnectTimeoutException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (ClientProtocolException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (HttpException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				
				
				//GET USER List
				ArrayList<User> userList;
				try {
					userList = ru.getUserList(credentials);
					u.setUserList(userList);
					u.storeUsers(getApplicationContext());
					
				} catch (ConnectTimeoutException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (ClientProtocolException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (HttpException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				//GET Antibiotic List
				ArrayList<String> antibioticList;
				try {
					antibioticList = ru.getAntibioticList(credentials);
					u.setAllAntibiotics(antibioticList);
				} catch (ConnectTimeoutException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (ClientProtocolException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (HttpException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				
				//todo store methode
				//dafür noch antibioticdatasource erstellen?
				
//				//GET InfectionDiagnosis List
//				ArrayList<InfectionDiagnosis> infectionDiagnosisList = ru.getInfectionDiagnosisList(credentials);
//				System.out.println(infectionDiagnosisList);
//				
//				//GET InterventionType List
//				ArrayList<InterventionType> interventionTypeList = ru.getInterventionTypeList(credentials);
//				System.out.println(interventionTypeList);
//				
				
				//Init Data
				u.initData(getApplicationContext());
				
				//TEST TimerData for POST Test
				ArrayList<TimerData> timerDataList = new ArrayList<TimerData>();
				TimerData timerData1 = new TimerData(1, "ANDRODTESTWOW", 55, 13);
				TimerData timerData2 = new TimerData(2, "ANDRODTESTWOAH", 42, 10);
				TimerData timerData3 = new TimerData(3, "ANDRODTESTWUHUU", 66, 9);
				TimerData timerData4 = new TimerData(4, "ANDRODTESTWTF", 12, 13);
				timerDataList.add(timerData1);
				timerDataList.add(timerData2);
				timerDataList.add(timerData3);
				timerDataList.add(timerData4);
				
				ArrayList<StatisticData> statisticDataList = new ArrayList<StatisticData>();
				for (Checklist cl : u.getChecklistList()){
					statisticDataList.add(cl.Checklist2StatisticData(u.getWardList()));
				}
				System.out.print(statisticDataList);
				
				//POST Test
				try {
					ru.post(credentials, "timerdata", timerDataList);
				} catch (ClientProtocolException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (HttpException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				//POST StatisticData
				try {
					ru.post(credentials, "statisticdata", statisticDataList);
				} catch (ClientProtocolException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (HttpException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				logTextView.setText("Synchronisation abgeschlossen!");
				
				startActivity(toHomeScreen);
			}
		});
		
		// ButtonListener
				noButton.setOnClickListener(new View.OnClickListener() {

					@Override
					public void onClick(View v) {
						Intent toHomeScreen = new Intent(getApplicationContext(),
								HomeActivity.class);
						startActivity(toHomeScreen);
					}
				});

	}

	// @Override
	// public boolean onCreateOptionsMenu(Menu menu) {
	// // Inflate the menu; this adds items to the action bar if it is present.
	// getMenuInflater().inflate(R.menu.synchronization, menu);
	// return true;
	// }

}
